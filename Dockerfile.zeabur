# ZEABUR Production Dockerfile
# No-Code Architects Toolkit - CPU Optimized

FROM python:3.11-slim

# Install system dependencies for media processing
RUN apt-get update && apt-get install -y \
    ffmpeg \
    wget \
    curl \
    build-essential \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY requirements_zeabur.txt .

# Install Python dependencies including gunicorn
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements_zeabur.txt && \
    pip install --no-cache-dir gunicorn

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/output/audio && \
    mkdir -p /app/output/videos && \
    mkdir -p /app/output/subtitles && \
    mkdir -p /app/temp

# Set proper permissions
RUN chmod -R 755 /app/output && \
    chmod -R 755 /app/temp

# Environment variables for production
ENV API_KEY=production-api-key-2024
ENV LOCAL_STORAGE_PATH=/app/output
ENV DEBUG=false
ENV FLASK_ENV=production
ENV PYTHONUNBUFFERED=1
ENV PYTHONIOENCODING=utf-8
ENV WHISPER_MODEL_SIZE=tiny
ENV WHISPER_COMPUTE_TYPE=int8

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/v1/toolkit/test || exit 1

# Expose port
EXPOSE 8080

# Start application
CMD ["python", "app.py"]


